unit frmExperiment;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.ComCtrls, Vcl.StdCtrls, dbfunc, uKernel;

type
  TfExperiment = class(TForm)
    ComboBox1: TComboBox;
    ComboBox2: TComboBox;
    ListView1: TListView;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    AcademicYear: TResultTable;
    FIDCurAcademicYear: integer;
    procedure SetIDCurAcademicYear(const Value: integer);
  public
    property IDCurAcademicYear: integer read FIDCurAcademicYear
      write SetIDCurAcademicYear;
  end;

var
  fExperiment: TfExperiment;

implementation

{$R *.dfm}
{ TfExperiment }

procedure TfExperiment.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if Assigned(AcademicYear) then
    FreeAndNil(AcademicYear);
end;

procedure TfExperiment.FormCreate(Sender: TObject);
begin
  AcademicYear := nil;
end;

procedure TfExperiment.FormDestroy(Sender: TObject);
begin
  if Assigned(AcademicYear) then
    FreeAndNil(AcademicYear);
end;

procedure TfExperiment.FormShow(Sender: TObject);
begin
  if not Assigned(AcademicYear) then
    AcademicYear := Kernel.GetAcademicYear;
end;

procedure TfExperiment.SetIDCurAcademicYear(const Value: integer);
begin
  if FIDCurAcademicYear <> Value then
    FIDCurAcademicYear := Value;
end;

end.
